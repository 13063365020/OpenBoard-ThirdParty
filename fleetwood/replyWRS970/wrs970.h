/****************************************************************************
**
** Namespace WRS970 generated by dumpcpp from type library
** ocx\WRS970.ocx
**
****************************************************************************/

#ifndef QAX_DUMPCPP_WRS970_H
#define QAX_DUMPCPP_WRS970_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef WRS970_EXPORT
#define WRS970_EXPORT
#endif

#include <qaxobject.h>
#include <qaxwidget.h>
#include <qdatetime.h>
#include <qpixmap.h>

struct IDispatch;


// Referenced namespace

namespace WRS970 {

    enum TAddressMode {
        addrDynamic             = 0,
        addrStatic              = 1
    };

    enum TAnswerType {
        atSingleAlpha           = 0,
        atSingleDigit           = 1,
        atYesNo                 = 2,
        atYesAbstainNo          = 3,
        atAgreeDisagree         = 5,
        atLowMedHigh            = 6,
        atTrueFalse             = 7,
        atMomentToMoment        = 8,
        atMultiAlphaNumeric     = 9,
        atNegativePlus          = 4,
        atCustomSoftKeys        = 10
    };

    enum TBand {
        bndNone                 = 0,
        bndLowMid               = 1,
        bndLowHigh              = 2,
        bndMidHigh              = 3,
        bndLow                  = 4,
        bndMid                  = 5,
        bndHigh                 = 6
    };

    enum TBasePowerLevel {
        pwrLow                  = 0,
        pwrMid                  = 1,
        pwrHigh                 = 2,
        pwrEuroMax              = 3,
        pwrUSMax                = 6
    };

    enum TCommType {
        ctUndefined             = 0,
        ctTCP                   = 1,
        ctUSB                   = 2
    };

    enum TLineOnePrompt {
        lopBlank                = 0,
        lopVoteNow              = 4,
        lopSystemIdle           = 12,
        lopThankYou             = 11,
        lopWelcome              = 1,
        lopChooseAgain          = 5,
        lopVoteEnded            = 6,
        lopBreakTime            = 8,
        lopQuestions            = 9,
        lopHello                = 2,
        lopPleaseVote           = 3,
        lopTimeIsUp             = 7,
        lopManyThanks           = 10,
        lopQuestionNumber       = 13,
        lopCustomPrompt         = 16,
        lopRespondNow           = 14,
        lopReturnKeypad         = 15
    };

    enum TMenuAccess {
        mtDisabled              = 0,
        mtBaseAddress           = 2,
        mtBaseID                = 3,
        mtKeyBeep               = 4,
        mtOpMode                = 5,
        mtContrast              = 1
    };

    enum TOnTimer {
        onTwoSeconds            = 0,
        onThreeSeconds          = 1,
        onFourSeconds           = 2,
        onFiveSeconds           = 3
    };

    enum TOpMode {
        opNormal                = 0,
        opOnKeypress            = 1,
        opOnAcknowledged        = 2
    };

    enum TPingTimer {
        pngOff                  = 0,
        pngFive                 = 1,
        PngTen                  = 2,
        PngFifteen              = 3
    };

    enum TPowerTimer {
        pwrTen                  = 0,
        pwrTwenty               = 1,
        pwrThirty               = 2,
        pwrForty                = 3
    };

// forward declarations
    enum TLineOnePrompt;
    enum TAnswerType;
    enum TOpMode;
    enum TOnTimer;
    enum TBasePowerLevel;
    enum TMenuAccess;
    enum TBand;
    enum TAddressMode;
    enum TCommType;
    enum TPingTimer;
    enum TPowerTimer;
    enum TLineOnePrompt;
    enum TAnswerType;
    enum TOpMode;
    enum TOnTimer;
    enum TBasePowerLevel;
    enum TMenuAccess;
    enum TBand;
    enum TAddressMode;
    enum TCommType;
    enum TPingTimer;
    enum TPowerTimer;

class WRS970_EXPORT IWRS970X : public QAxObject
{
public:
    IWRS970X(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AddressMode
    */
    inline WRS970::TAddressMode AddressMode() const; //Returns the value of AddressMode
    inline void SetAddressMode(WRS970::TAddressMode value); //Sets the value of the AddressMode property

    /*
    Property AlignDisabled
    */
    inline bool AlignDisabled() const; //Returns the value of AlignDisabled

    /*
    Property AlignWithMargins
    */
    inline bool AlignWithMargins() const; //Returns the value of AlignWithMargins
    inline void SetAlignWithMargins(bool value); //Sets the value of the AlignWithMargins property

    /*
    Property AnswerPeriod
    */
    inline int AnswerPeriod() const; //Returns the value of AnswerPeriod
    inline void SetAnswerPeriod(int value); //Sets the value of the AnswerPeriod property

    /*
    Property Authentication
    */
    inline bool Authentication() const; //Returns the value of Authentication
    inline void SetAuthentication(bool value); //Sets the value of the Authentication property

    /*
    Property AutoConnect
    */
    inline bool AutoConnect() const; //Returns the value of AutoConnect
    inline void SetAutoConnect(bool value); //Sets the value of the AutoConnect property

    /*
    Property AutomateQuestionNumber
    */
    inline bool AutomateQuestionNumber() const; //Returns the value of AutomateQuestionNumber
    inline void SetAutomateQuestionNumber(bool value); //Sets the value of the AutomateQuestionNumber property

    /*
    Property AvoidWifi
    */
    inline WRS970::TBand AvoidWifi() const; //Returns the value of AvoidWifi
    inline void SetAvoidWifi(WRS970::TBand value); //Sets the value of the AvoidWifi property

    /*
    Property BaseChannel
    */
    inline int BaseChannel() const; //Returns the value of BaseChannel
    inline void SetBaseChannel(int value); //Sets the value of the BaseChannel property

    /*
    Property BaseName
    */
    inline QString BaseName() const; //Returns the value of BaseName
    inline void SetBaseName(const QString& value); //Sets the value of the BaseName property

    /*
    Property BaseSerial
    */
    inline QString BaseSerial() const; //Returns the value of BaseSerial

    /*
    Property BaseVersion
    */
    inline QString BaseVersion() const; //Returns the value of BaseVersion

    /*
    Property BeepKeypads
    */
    inline bool BeepKeypads() const; //Returns the value of BeepKeypads
    inline void SetBeepKeypads(bool value); //Sets the value of the BeepKeypads property

    /*
    Property CommType
    */
    inline WRS970::TCommType CommType() const; //Returns the value of CommType
    inline void SetCommType(WRS970::TCommType value); //Sets the value of the CommType property

    /*
    Property CommunicationTimeout
    */
    inline int CommunicationTimeout() const; //Returns the value of CommunicationTimeout
    inline void SetCommunicationTimeout(int value); //Sets the value of the CommunicationTimeout property

    /*
    Property Connected
    */
    inline bool Connected() const; //Returns the value of Connected

    /*
    Property ControlVersion
    */
    inline QString ControlVersion() const; //Returns the value of ControlVersion

    /*
    Property CustomMessage
    */
    inline QString CustomMessage() const; //Returns the value of CustomMessage
    inline void SetCustomMessage(const QString& value); //Sets the value of the CustomMessage property

    /*
    Property CustomSoftKeys
    */
    inline QString CustomSoftKeys() const; //Returns the value of CustomSoftKeys
    inline void SetCustomSoftKeys(const QString& value); //Sets the value of the CustomSoftKeys property

    /*
    Property DebugEnabled
    */
    inline bool DebugEnabled() const; //Returns the value of DebugEnabled
    inline void SetDebugEnabled(bool value); //Sets the value of the DebugEnabled property

    /*
    Property DockSite
    */
    inline bool DockSite() const; //Returns the value of DockSite
    inline void SetDockSite(bool value); //Sets the value of the DockSite property

    /*
    Property DoubleBuffered
    */
    inline bool DoubleBuffered() const; //Returns the value of DoubleBuffered
    inline void SetDoubleBuffered(bool value); //Sets the value of the DoubleBuffered property

    /*
    Property Enabled
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property ErrorsEnabled
    */
    inline bool ErrorsEnabled() const; //Returns the value of ErrorsEnabled
    inline void SetErrorsEnabled(bool value); //Sets the value of the ErrorsEnabled property

    /*
    Property ExceptionsEnabled
    */
    inline bool ExceptionsEnabled() const; //Returns the value of ExceptionsEnabled
    inline void SetExceptionsEnabled(bool value); //Sets the value of the ExceptionsEnabled property

    /*
    Property ExplicitHeight
    */
    inline int ExplicitHeight() const; //Returns the value of ExplicitHeight

    /*
    Property ExplicitLeft
    */
    inline int ExplicitLeft() const; //Returns the value of ExplicitLeft

    /*
    Property ExplicitTop
    */
    inline int ExplicitTop() const; //Returns the value of ExplicitTop

    /*
    Property ExplicitWidth
    */
    inline int ExplicitWidth() const; //Returns the value of ExplicitWidth

    /*
    Property ForceMenu
    */
    inline bool ForceMenu() const; //Returns the value of ForceMenu
    inline void SetForceMenu(bool value); //Sets the value of the ForceMenu property

    /*
    Property HideAntennaIcon
    */
    inline bool HideAntennaIcon() const; //Returns the value of HideAntennaIcon
    inline void SetHideAntennaIcon(bool value); //Sets the value of the HideAntennaIcon property

    /*
    Property HideBatteryIcon
    */
    inline bool HideBatteryIcon() const; //Returns the value of HideBatteryIcon
    inline void SetHideBatteryIcon(bool value); //Sets the value of the HideBatteryIcon property

    /*
    Property KeyLockFeedback
    */
    inline bool KeyLockFeedback() const; //Returns the value of KeyLockFeedback
    inline void SetKeyLockFeedback(bool value); //Sets the value of the KeyLockFeedback property

    /*
    Property KeypadAlertEnabled
    */
    inline bool KeypadAlertEnabled() const; //Returns the value of KeypadAlertEnabled
    inline void SetKeypadAlertEnabled(bool value); //Sets the value of the KeypadAlertEnabled property

    /*
    Property KeypadBacklight
    */
    inline bool KeypadBacklight() const; //Returns the value of KeypadBacklight
    inline void SetKeypadBacklight(bool value); //Sets the value of the KeypadBacklight property

    /*
    Property KeypadBacklightOnTimer
    */
    inline WRS970::TOnTimer KeypadBacklightOnTimer() const; //Returns the value of KeypadBacklightOnTimer
    inline void SetKeypadBacklightOnTimer(WRS970::TOnTimer value); //Sets the value of the KeypadBacklightOnTimer property

    /*
    Property KeypadBacklightOpMethod
    */
    inline WRS970::TOpMode KeypadBacklightOpMethod() const; //Returns the value of KeypadBacklightOpMethod
    inline void SetKeypadBacklightOpMethod(WRS970::TOpMode value); //Sets the value of the KeypadBacklightOpMethod property

    /*
    Property KeypadHideVote
    */
    inline bool KeypadHideVote() const; //Returns the value of KeypadHideVote
    inline void SetKeypadHideVote(bool value); //Sets the value of the KeypadHideVote property

    /*
    Property KeypadList
    */
    inline QString KeypadList() const; //Returns the value of KeypadList

    /*
    Property KeypadListCount
    */
    inline int KeypadListCount() const; //Returns the value of KeypadListCount

    /*
    Property KeypadLoginEnabled
    */
    inline bool KeypadLoginEnabled() const; //Returns the value of KeypadLoginEnabled
    inline void SetKeypadLoginEnabled(bool value); //Sets the value of the KeypadLoginEnabled property

    /*
    Property KeypadLowBatteryNotification
    */
    inline bool KeypadLowBatteryNotification() const; //Returns the value of KeypadLowBatteryNotification
    inline void SetKeypadLowBatteryNotification(bool value); //Sets the value of the KeypadLowBatteryNotification property

    /*
    Property KeypadPowerTimer
    */
    inline WRS970::TPowerTimer KeypadPowerTimer() const; //Returns the value of KeypadPowerTimer
    inline void SetKeypadPowerTimer(WRS970::TPowerTimer value); //Sets the value of the KeypadPowerTimer property

    /*
    Property KeypadsOutOfRange
    */
    inline bool KeypadsOutOfRange() const; //Returns the value of KeypadsOutOfRange
    inline void SetKeypadsOutOfRange(bool value); //Sets the value of the KeypadsOutOfRange property

    /*
    Property KeypadsPowerDown
    */
    inline bool KeypadsPowerDown() const; //Returns the value of KeypadsPowerDown
    inline void SetKeypadsPowerDown(bool value); //Sets the value of the KeypadsPowerDown property

    /*
    Property MaxKeypadsAllowed
    */
    inline int MaxKeypadsAllowed() const; //Returns the value of MaxKeypadsAllowed
    inline void SetMaxKeypadsAllowed(int value); //Sets the value of the MaxKeypadsAllowed property

    /*
    Property MenuAccess
    */
    inline WRS970::TMenuAccess MenuAccess() const; //Returns the value of MenuAccess
    inline void SetMenuAccess(WRS970::TMenuAccess value); //Sets the value of the MenuAccess property

    /*
    Property MessagePeriod
    */
    inline int MessagePeriod() const; //Returns the value of MessagePeriod
    inline void SetMessagePeriod(int value); //Sets the value of the MessagePeriod property

    /*
    Property Model
    */
    inline QString Model() const; //Returns the value of Model

    /*
    Property MouseInClient
    */
    inline bool MouseInClient() const; //Returns the value of MouseInClient

    /*
    Property MsgAckEnabled
    */
    inline bool MsgAckEnabled() const; //Returns the value of MsgAckEnabled
    inline void SetMsgAckEnabled(bool value); //Sets the value of the MsgAckEnabled property

    /*
    Property PingTimer
    */
    inline WRS970::TPingTimer PingTimer() const; //Returns the value of PingTimer
    inline void SetPingTimer(WRS970::TPingTimer value); //Sets the value of the PingTimer property

    /*
    Property PowerKeyDisabled
    */
    inline bool PowerKeyDisabled() const; //Returns the value of PowerKeyDisabled
    inline void SetPowerKeyDisabled(bool value); //Sets the value of the PowerKeyDisabled property

    /*
    Property PowerLevel
    */
    inline WRS970::TBasePowerLevel PowerLevel() const; //Returns the value of PowerLevel
    inline void SetPowerLevel(WRS970::TBasePowerLevel value); //Sets the value of the PowerLevel property

    /*
    Property ReceiveArrowOnAnyBase
    */
    inline bool ReceiveArrowOnAnyBase() const; //Returns the value of ReceiveArrowOnAnyBase
    inline void SetReceiveArrowOnAnyBase(bool value); //Sets the value of the ReceiveArrowOnAnyBase property

    /*
    Property SMSEntry
    */
    inline bool SMSEntry() const; //Returns the value of SMSEntry
    inline void SetSMSEntry(bool value); //Sets the value of the SMSEntry property

    /*
    Property SMSVoteTimeout
    */
    inline int SMSVoteTimeout() const; //Returns the value of SMSVoteTimeout
    inline void SetSMSVoteTimeout(int value); //Sets the value of the SMSVoteTimeout property

    /*
    Property ScrollFaster
    */
    inline bool ScrollFaster() const; //Returns the value of ScrollFaster
    inline void SetScrollFaster(bool value); //Sets the value of the ScrollFaster property

    /*
    Property SecureLogin
    */
    inline bool SecureLogin() const; //Returns the value of SecureLogin
    inline void SetSecureLogin(bool value); //Sets the value of the SecureLogin property

    /*
    Property SeqLinkPackets
    */
    inline int SeqLinkPackets() const; //Returns the value of SeqLinkPackets
    inline void SetSeqLinkPackets(int value); //Sets the value of the SeqLinkPackets property

    /*
    Property ShowAnswer
    */
    inline bool ShowAnswer() const; //Returns the value of ShowAnswer
    inline void SetShowAnswer(bool value); //Sets the value of the ShowAnswer property

    /*
    Property ShowReceived
    */
    inline bool ShowReceived() const; //Returns the value of ShowReceived
    inline void SetShowReceived(bool value); //Sets the value of the ShowReceived property

    /*
    Property ShowSending
    */
    inline bool ShowSending() const; //Returns the value of ShowSending
    inline void SetShowSending(bool value); //Sets the value of the ShowSending property

    /*
    Property TCPAddress
    */
    inline QString TCPAddress() const; //Returns the value of TCPAddress
    inline void SetTCPAddress(const QString& value); //Sets the value of the TCPAddress property

    /*
    Property TCPPort
    */
    inline int TCPPort() const; //Returns the value of TCPPort
    inline void SetTCPPort(int value); //Sets the value of the TCPPort property

    /*
    Property UseDockManager
    */
    inline bool UseDockManager() const; //Returns the value of UseDockManager
    inline void SetUseDockManager(bool value); //Sets the value of the UseDockManager property

    /*
    Property Version3
    */
    inline bool Version3() const; //Returns the value of Version3
    inline void SetVersion3(bool value); //Sets the value of the Version3 property

    /*
    Property Visible
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

    /*
    Property VisibleDockClientCount
    */
    inline int VisibleDockClientCount() const; //Returns the value of VisibleDockClientCount

    /*
    Method AddKeypad
    */
    inline bool AddKeypad(const QString& SerialNumber);

    /*
    Method AddKeypadByID
    */
    inline bool AddKeypadByID(const QString& Keypads);

    /*
    Method AddStaticKeypad
    */
    inline bool AddStaticKeypad(const QString& SerialNumber, int KeypadID, bool Overwrite);

    /*
    Method BeginQuestion
    */
    inline void BeginQuestion(int QuestionNumber, WRS970::TAnswerType AnswerType);

    /*
    Method BeginQuestionAnswer
    */
    inline void BeginQuestionAnswer(int QuestionNumber, WRS970::TAnswerType AnswerType, const QString& Answer);

    /*
    Method BeginQuestionPrompt
    */
    inline void BeginQuestionPrompt(WRS970::TLineOnePrompt LineOnePrompt, int QuestionNumber, WRS970::TAnswerType AnswerType, const QString& Answer);

    /*
    Method ClearDataBuffer
    */
    inline void ClearDataBuffer();

    /*
    Method ClearKeypadList
    */
    inline void ClearKeypadList();

    /*
    Method Connect
    */
    inline void Connect(const QString& SerialNumber);

    /*
    Method Disconnect
    */
    inline void Disconnect();

    /*
    Method DrawTextBiDiModeFlagsReadingOnly
    */
    inline int DrawTextBiDiModeFlagsReadingOnly();

    /*
    Method GetAvailableBases
    */
    inline QString GetAvailableBases(bool WithDescription);

    /*
    Method GetBaseInfo
    */
    inline void GetBaseInfo();

    /*
    Method GetTCPBases
    */
    inline QVariant GetTCPBases(bool WithDescription);

    /*
    Method InitiateAction
    */
    inline void InitiateAction();

    /*
    Method IsKeypadInList
    */
    inline bool IsKeypadInList(const QString& SerialNumber);

    /*
    Method IsRightToLeft
    */
    inline bool IsRightToLeft();

    /*
    Method KeypadLoginResult
    */
    inline void KeypadLoginResult(const QString& SerialNumber, bool Passed);

    /*
    Method LockKeys
    */
    inline void LockKeys(const QString& Keys);

    /*
    Method LogoutAllKeypads
    */
    inline void LogoutAllKeypads();

    /*
    Method LogoutKeypad
    */
    inline void LogoutKeypad(int Address);

    /*
    Method Paint
    */
    inline void Paint();

    /*
    Method RemoveKeypad
    */
    inline void RemoveKeypad(const QString& SerialNumber);

    /*
    Method RemoveKeypadByID
    */
    inline bool RemoveKeypadByID(const QString& Keypads);

    /*
    Method RemoveStaticKeypad
    */
    inline void RemoveStaticKeypad(int KeypadID);

    /*
    Method SendMsgByID
    */
    inline void SendMsgByID(int KeypadID, const QString& KeypadMessage);

    /*
    Method SendMsgBySerial
    */
    inline void SendMsgBySerial(const QString& SerialNumber, const QString& Message);

    /*
    Method SetDesignVisible
    */
    inline void SetDesignVisible(bool Value);

    /*
    Method SetSession
    */
    inline void SetSession(const QString& SessionName, int SessionGroup);

    /*
    Method SetSubComponent
    */
    inline void SetSubComponent(bool IsSubComponent);

    /*
    Method UnlockKeys
    */
    inline void UnlockKeys(const QString& Keys);

    /*
    Method UseRightToLeftReading
    */
    inline bool UseRightToLeftReading();

    /*
    Method UseRightToLeftScrollBar
    */
    inline bool UseRightToLeftScrollBar();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// skipping event interface IWRS970XEvents

// Actual coclasses
class WRS970_EXPORT WRS970X : public QAxWidget
{
public:
    WRS970X(QWidget *parent = 0, Qt::WindowFlags f = 0)
    : QAxWidget(parent, f)
    {
        setControl("{ed086fac-4d9f-40d8-aa70-b7e3bc7574ed}");
    }

    WRS970X(IWRS970X *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property AddressMode
    */
    inline WRS970::TAddressMode AddressMode() const; //Returns the value of AddressMode
    inline void SetAddressMode(WRS970::TAddressMode value); //Sets the value of the AddressMode property

    /*
    Property AlignDisabled
    */
    inline bool AlignDisabled() const; //Returns the value of AlignDisabled

    /*
    Property AlignWithMargins
    */
    inline bool AlignWithMargins() const; //Returns the value of AlignWithMargins
    inline void SetAlignWithMargins(bool value); //Sets the value of the AlignWithMargins property

    /*
    Property AnswerPeriod
    */
    inline int AnswerPeriod() const; //Returns the value of AnswerPeriod
    inline void SetAnswerPeriod(int value); //Sets the value of the AnswerPeriod property

    /*
    Property Authentication
    */
    inline bool Authentication() const; //Returns the value of Authentication
    inline void SetAuthentication(bool value); //Sets the value of the Authentication property

    /*
    Property AutoConnect
    */
    inline bool AutoConnect() const; //Returns the value of AutoConnect
    inline void SetAutoConnect(bool value); //Sets the value of the AutoConnect property

    /*
    Property AutomateQuestionNumber
    */
    inline bool AutomateQuestionNumber() const; //Returns the value of AutomateQuestionNumber
    inline void SetAutomateQuestionNumber(bool value); //Sets the value of the AutomateQuestionNumber property

    /*
    Property AvoidWifi
    */
    inline WRS970::TBand AvoidWifi() const; //Returns the value of AvoidWifi
    inline void SetAvoidWifi(WRS970::TBand value); //Sets the value of the AvoidWifi property

    /*
    Property BaseChannel
    */
    inline int BaseChannel() const; //Returns the value of BaseChannel
    inline void SetBaseChannel(int value); //Sets the value of the BaseChannel property

    /*
    Property BaseName
    */
    inline QString BaseName() const; //Returns the value of BaseName
    inline void SetBaseName(const QString& value); //Sets the value of the BaseName property

    /*
    Property BaseSerial
    */
    inline QString BaseSerial() const; //Returns the value of BaseSerial

    /*
    Property BaseVersion
    */
    inline QString BaseVersion() const; //Returns the value of BaseVersion

    /*
    Property BeepKeypads
    */
    inline bool BeepKeypads() const; //Returns the value of BeepKeypads
    inline void SetBeepKeypads(bool value); //Sets the value of the BeepKeypads property

    /*
    Property CommType
    */
    inline WRS970::TCommType CommType() const; //Returns the value of CommType
    inline void SetCommType(WRS970::TCommType value); //Sets the value of the CommType property

    /*
    Property CommunicationTimeout
    */
    inline int CommunicationTimeout() const; //Returns the value of CommunicationTimeout
    inline void SetCommunicationTimeout(int value); //Sets the value of the CommunicationTimeout property

    /*
    Property Connected
    */
    inline bool Connected() const; //Returns the value of Connected

    /*
    Property ControlVersion
    */
    inline QString ControlVersion() const; //Returns the value of ControlVersion

    /*
    Property CustomMessage
    */
    inline QString CustomMessage() const; //Returns the value of CustomMessage
    inline void SetCustomMessage(const QString& value); //Sets the value of the CustomMessage property

    /*
    Property CustomSoftKeys
    */
    inline QString CustomSoftKeys() const; //Returns the value of CustomSoftKeys
    inline void SetCustomSoftKeys(const QString& value); //Sets the value of the CustomSoftKeys property

    /*
    Property DebugEnabled
    */
    inline bool DebugEnabled() const; //Returns the value of DebugEnabled
    inline void SetDebugEnabled(bool value); //Sets the value of the DebugEnabled property

    /*
    Property DockSite
    */
    inline bool DockSite() const; //Returns the value of DockSite
    inline void SetDockSite(bool value); //Sets the value of the DockSite property

    /*
    Property DoubleBuffered
    */
    inline bool DoubleBuffered() const; //Returns the value of DoubleBuffered
    inline void SetDoubleBuffered(bool value); //Sets the value of the DoubleBuffered property

    /*
    Property Enabled
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property ErrorsEnabled
    */
    inline bool ErrorsEnabled() const; //Returns the value of ErrorsEnabled
    inline void SetErrorsEnabled(bool value); //Sets the value of the ErrorsEnabled property

    /*
    Property ExceptionsEnabled
    */
    inline bool ExceptionsEnabled() const; //Returns the value of ExceptionsEnabled
    inline void SetExceptionsEnabled(bool value); //Sets the value of the ExceptionsEnabled property

    /*
    Property ExplicitHeight
    */
    inline int ExplicitHeight() const; //Returns the value of ExplicitHeight

    /*
    Property ExplicitLeft
    */
    inline int ExplicitLeft() const; //Returns the value of ExplicitLeft

    /*
    Property ExplicitTop
    */
    inline int ExplicitTop() const; //Returns the value of ExplicitTop

    /*
    Property ExplicitWidth
    */
    inline int ExplicitWidth() const; //Returns the value of ExplicitWidth

    /*
    Property ForceMenu
    */
    inline bool ForceMenu() const; //Returns the value of ForceMenu
    inline void SetForceMenu(bool value); //Sets the value of the ForceMenu property

    /*
    Property HideAntennaIcon
    */
    inline bool HideAntennaIcon() const; //Returns the value of HideAntennaIcon
    inline void SetHideAntennaIcon(bool value); //Sets the value of the HideAntennaIcon property

    /*
    Property HideBatteryIcon
    */
    inline bool HideBatteryIcon() const; //Returns the value of HideBatteryIcon
    inline void SetHideBatteryIcon(bool value); //Sets the value of the HideBatteryIcon property

    /*
    Property KeyLockFeedback
    */
    inline bool KeyLockFeedback() const; //Returns the value of KeyLockFeedback
    inline void SetKeyLockFeedback(bool value); //Sets the value of the KeyLockFeedback property

    /*
    Property KeypadAlertEnabled
    */
    inline bool KeypadAlertEnabled() const; //Returns the value of KeypadAlertEnabled
    inline void SetKeypadAlertEnabled(bool value); //Sets the value of the KeypadAlertEnabled property

    /*
    Property KeypadBacklight
    */
    inline bool KeypadBacklight() const; //Returns the value of KeypadBacklight
    inline void SetKeypadBacklight(bool value); //Sets the value of the KeypadBacklight property

    /*
    Property KeypadBacklightOnTimer
    */
    inline WRS970::TOnTimer KeypadBacklightOnTimer() const; //Returns the value of KeypadBacklightOnTimer
    inline void SetKeypadBacklightOnTimer(WRS970::TOnTimer value); //Sets the value of the KeypadBacklightOnTimer property

    /*
    Property KeypadBacklightOpMethod
    */
    inline WRS970::TOpMode KeypadBacklightOpMethod() const; //Returns the value of KeypadBacklightOpMethod
    inline void SetKeypadBacklightOpMethod(WRS970::TOpMode value); //Sets the value of the KeypadBacklightOpMethod property

    /*
    Property KeypadHideVote
    */
    inline bool KeypadHideVote() const; //Returns the value of KeypadHideVote
    inline void SetKeypadHideVote(bool value); //Sets the value of the KeypadHideVote property

    /*
    Property KeypadList
    */
    inline QString KeypadList() const; //Returns the value of KeypadList

    /*
    Property KeypadListCount
    */
    inline int KeypadListCount() const; //Returns the value of KeypadListCount

    /*
    Property KeypadLoginEnabled
    */
    inline bool KeypadLoginEnabled() const; //Returns the value of KeypadLoginEnabled
    inline void SetKeypadLoginEnabled(bool value); //Sets the value of the KeypadLoginEnabled property

    /*
    Property KeypadLowBatteryNotification
    */
    inline bool KeypadLowBatteryNotification() const; //Returns the value of KeypadLowBatteryNotification
    inline void SetKeypadLowBatteryNotification(bool value); //Sets the value of the KeypadLowBatteryNotification property

    /*
    Property KeypadPowerTimer
    */
    inline WRS970::TPowerTimer KeypadPowerTimer() const; //Returns the value of KeypadPowerTimer
    inline void SetKeypadPowerTimer(WRS970::TPowerTimer value); //Sets the value of the KeypadPowerTimer property

    /*
    Property KeypadsOutOfRange
    */
    inline bool KeypadsOutOfRange() const; //Returns the value of KeypadsOutOfRange
    inline void SetKeypadsOutOfRange(bool value); //Sets the value of the KeypadsOutOfRange property

    /*
    Property KeypadsPowerDown
    */
    inline bool KeypadsPowerDown() const; //Returns the value of KeypadsPowerDown
    inline void SetKeypadsPowerDown(bool value); //Sets the value of the KeypadsPowerDown property

    /*
    Property MaxKeypadsAllowed
    */
    inline int MaxKeypadsAllowed() const; //Returns the value of MaxKeypadsAllowed
    inline void SetMaxKeypadsAllowed(int value); //Sets the value of the MaxKeypadsAllowed property

    /*
    Property MenuAccess
    */
    inline WRS970::TMenuAccess MenuAccess() const; //Returns the value of MenuAccess
    inline void SetMenuAccess(WRS970::TMenuAccess value); //Sets the value of the MenuAccess property

    /*
    Property MessagePeriod
    */
    inline int MessagePeriod() const; //Returns the value of MessagePeriod
    inline void SetMessagePeriod(int value); //Sets the value of the MessagePeriod property

    /*
    Property Model
    */
    inline QString Model() const; //Returns the value of Model

    /*
    Property MouseInClient
    */
    inline bool MouseInClient() const; //Returns the value of MouseInClient

    /*
    Property MsgAckEnabled
    */
    inline bool MsgAckEnabled() const; //Returns the value of MsgAckEnabled
    inline void SetMsgAckEnabled(bool value); //Sets the value of the MsgAckEnabled property

    /*
    Property PingTimer
    */
    inline WRS970::TPingTimer PingTimer() const; //Returns the value of PingTimer
    inline void SetPingTimer(WRS970::TPingTimer value); //Sets the value of the PingTimer property

    /*
    Property PowerKeyDisabled
    */
    inline bool PowerKeyDisabled() const; //Returns the value of PowerKeyDisabled
    inline void SetPowerKeyDisabled(bool value); //Sets the value of the PowerKeyDisabled property

    /*
    Property PowerLevel
    */
    inline WRS970::TBasePowerLevel PowerLevel() const; //Returns the value of PowerLevel
    inline void SetPowerLevel(WRS970::TBasePowerLevel value); //Sets the value of the PowerLevel property

    /*
    Property ReceiveArrowOnAnyBase
    */
    inline bool ReceiveArrowOnAnyBase() const; //Returns the value of ReceiveArrowOnAnyBase
    inline void SetReceiveArrowOnAnyBase(bool value); //Sets the value of the ReceiveArrowOnAnyBase property

    /*
    Property SMSEntry
    */
    inline bool SMSEntry() const; //Returns the value of SMSEntry
    inline void SetSMSEntry(bool value); //Sets the value of the SMSEntry property

    /*
    Property SMSVoteTimeout
    */
    inline int SMSVoteTimeout() const; //Returns the value of SMSVoteTimeout
    inline void SetSMSVoteTimeout(int value); //Sets the value of the SMSVoteTimeout property

    /*
    Property ScrollFaster
    */
    inline bool ScrollFaster() const; //Returns the value of ScrollFaster
    inline void SetScrollFaster(bool value); //Sets the value of the ScrollFaster property

    /*
    Property SecureLogin
    */
    inline bool SecureLogin() const; //Returns the value of SecureLogin
    inline void SetSecureLogin(bool value); //Sets the value of the SecureLogin property

    /*
    Property SeqLinkPackets
    */
    inline int SeqLinkPackets() const; //Returns the value of SeqLinkPackets
    inline void SetSeqLinkPackets(int value); //Sets the value of the SeqLinkPackets property

    /*
    Property ShowAnswer
    */
    inline bool ShowAnswer() const; //Returns the value of ShowAnswer
    inline void SetShowAnswer(bool value); //Sets the value of the ShowAnswer property

    /*
    Property ShowReceived
    */
    inline bool ShowReceived() const; //Returns the value of ShowReceived
    inline void SetShowReceived(bool value); //Sets the value of the ShowReceived property

    /*
    Property ShowSending
    */
    inline bool ShowSending() const; //Returns the value of ShowSending
    inline void SetShowSending(bool value); //Sets the value of the ShowSending property

    /*
    Property TCPAddress
    */
    inline QString TCPAddress() const; //Returns the value of TCPAddress
    inline void SetTCPAddress(const QString& value); //Sets the value of the TCPAddress property

    /*
    Property TCPPort
    */
    inline int TCPPort() const; //Returns the value of TCPPort
    inline void SetTCPPort(int value); //Sets the value of the TCPPort property

    /*
    Property UseDockManager
    */
    inline bool UseDockManager() const; //Returns the value of UseDockManager
    inline void SetUseDockManager(bool value); //Sets the value of the UseDockManager property

    /*
    Property Version3
    */
    inline bool Version3() const; //Returns the value of Version3
    inline void SetVersion3(bool value); //Sets the value of the Version3 property

    /*
    Property Visible
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

    /*
    Property VisibleDockClientCount
    */
    inline int VisibleDockClientCount() const; //Returns the value of VisibleDockClientCount

    /*
    Method AddKeypad
    */
    inline bool AddKeypad(const QString& SerialNumber);

    /*
    Method AddKeypadByID
    */
    inline bool AddKeypadByID(const QString& Keypads);

    /*
    Method AddStaticKeypad
    */
    inline bool AddStaticKeypad(const QString& SerialNumber, int KeypadID, bool Overwrite);

    /*
    Method BeginQuestion
    */
    inline void BeginQuestion(int QuestionNumber, WRS970::TAnswerType AnswerType);

    /*
    Method BeginQuestionAnswer
    */
    inline void BeginQuestionAnswer(int QuestionNumber, WRS970::TAnswerType AnswerType, const QString& Answer);

    /*
    Method BeginQuestionPrompt
    */
    inline void BeginQuestionPrompt(WRS970::TLineOnePrompt LineOnePrompt, int QuestionNumber, WRS970::TAnswerType AnswerType, const QString& Answer);

    /*
    Method ClearDataBuffer
    */
    inline void ClearDataBuffer();

    /*
    Method ClearKeypadList
    */
    inline void ClearKeypadList();

    /*
    Method Connect
    */
    inline void Connect(const QString& SerialNumber);

    /*
    Method Disconnect
    */
    inline void Disconnect();

    /*
    Method DrawTextBiDiModeFlagsReadingOnly
    */
    inline int DrawTextBiDiModeFlagsReadingOnly();

    /*
    Method GetAvailableBases
    */
    inline QString GetAvailableBases(bool WithDescription);

    /*
    Method GetBaseInfo
    */
    inline void GetBaseInfo();

    /*
    Method GetTCPBases
    */
    inline QVariant GetTCPBases(bool WithDescription);

    /*
    Method InitiateAction
    */
    inline void InitiateAction();

    /*
    Method IsKeypadInList
    */
    inline bool IsKeypadInList(const QString& SerialNumber);

    /*
    Method IsRightToLeft
    */
    inline bool IsRightToLeft();

    /*
    Method KeypadLoginResult
    */
    inline void KeypadLoginResult(const QString& SerialNumber, bool Passed);

    /*
    Method LockKeys
    */
    inline void LockKeys(const QString& Keys);

    /*
    Method LogoutAllKeypads
    */
    inline void LogoutAllKeypads();

    /*
    Method LogoutKeypad
    */
    inline void LogoutKeypad(int Address);

    /*
    Method Paint
    */
    inline void Paint();

    /*
    Method RemoveKeypad
    */
    inline void RemoveKeypad(const QString& SerialNumber);

    /*
    Method RemoveKeypadByID
    */
    inline bool RemoveKeypadByID(const QString& Keypads);

    /*
    Method RemoveStaticKeypad
    */
    inline void RemoveStaticKeypad(int KeypadID);

    /*
    Method SendMsgByID
    */
    inline void SendMsgByID(int KeypadID, const QString& KeypadMessage);

    /*
    Method SendMsgBySerial
    */
    inline void SendMsgBySerial(const QString& SerialNumber, const QString& Message);

    /*
    Method SetDesignVisible
    */
    inline void SetDesignVisible(bool Value);

    /*
    Method SetSession
    */
    inline void SetSession(const QString& SessionName, int SessionGroup);

    /*
    Method SetSubComponent
    */
    inline void SetSubComponent(bool IsSubComponent);

    /*
    Method UnlockKeys
    */
    inline void UnlockKeys(const QString& Keys);

    /*
    Method UseRightToLeftReading
    */
    inline bool UseRightToLeftReading();

    /*
    Method UseRightToLeftScrollBar
    */
    inline bool UseRightToLeftScrollBar();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// member function implementation
#ifndef QAX_DUMPCPP_WRS970_NOINLINES
inline WRS970::TAddressMode IWRS970X::AddressMode() const
{
    QVariant qax_result = property("AddressMode");
    Q_ASSERT(qax_result.isValid());
    return *(WRS970::TAddressMode*)qax_result.constData();
}
inline void IWRS970X::SetAddressMode(WRS970::TAddressMode value){ setProperty("AddressMode", QVariant(value)); }

inline bool IWRS970X::AlignDisabled() const
{
    QVariant qax_result = property("AlignDisabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IWRS970X::AlignWithMargins() const
{
    QVariant qax_result = property("AlignWithMargins");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetAlignWithMargins(bool value){ setProperty("AlignWithMargins", QVariant(value)); }

inline int IWRS970X::AnswerPeriod() const
{
    QVariant qax_result = property("AnswerPeriod");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IWRS970X::SetAnswerPeriod(int value){ setProperty("AnswerPeriod", QVariant(value)); }

inline bool IWRS970X::Authentication() const
{
    QVariant qax_result = property("Authentication");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetAuthentication(bool value){ setProperty("Authentication", QVariant(value)); }

inline bool IWRS970X::AutoConnect() const
{
    QVariant qax_result = property("AutoConnect");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetAutoConnect(bool value){ setProperty("AutoConnect", QVariant(value)); }

inline bool IWRS970X::AutomateQuestionNumber() const
{
    QVariant qax_result = property("AutomateQuestionNumber");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetAutomateQuestionNumber(bool value){ setProperty("AutomateQuestionNumber", QVariant(value)); }

inline WRS970::TBand IWRS970X::AvoidWifi() const
{
    QVariant qax_result = property("AvoidWifi");
    Q_ASSERT(qax_result.isValid());
    return *(WRS970::TBand*)qax_result.constData();
}
inline void IWRS970X::SetAvoidWifi(WRS970::TBand value){ setProperty("AvoidWifi", QVariant(value)); }

inline int IWRS970X::BaseChannel() const
{
    QVariant qax_result = property("BaseChannel");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IWRS970X::SetBaseChannel(int value){ setProperty("BaseChannel", QVariant(value)); }

inline QString IWRS970X::BaseName() const
{
    QVariant qax_result = property("BaseName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IWRS970X::SetBaseName(const QString& value){ setProperty("BaseName", QVariant(value)); }

inline QString IWRS970X::BaseSerial() const
{
    QVariant qax_result = property("BaseSerial");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IWRS970X::BaseVersion() const
{
    QVariant qax_result = property("BaseVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IWRS970X::BeepKeypads() const
{
    QVariant qax_result = property("BeepKeypads");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetBeepKeypads(bool value){ setProperty("BeepKeypads", QVariant(value)); }

inline WRS970::TCommType IWRS970X::CommType() const
{
    QVariant qax_result = property("CommType");
    Q_ASSERT(qax_result.isValid());
    return *(WRS970::TCommType*)qax_result.constData();
}
inline void IWRS970X::SetCommType(WRS970::TCommType value){ setProperty("CommType", QVariant(value)); }

inline int IWRS970X::CommunicationTimeout() const
{
    QVariant qax_result = property("CommunicationTimeout");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IWRS970X::SetCommunicationTimeout(int value){ setProperty("CommunicationTimeout", QVariant(value)); }

inline bool IWRS970X::Connected() const
{
    QVariant qax_result = property("Connected");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IWRS970X::ControlVersion() const
{
    QVariant qax_result = property("ControlVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString IWRS970X::CustomMessage() const
{
    QVariant qax_result = property("CustomMessage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IWRS970X::SetCustomMessage(const QString& value){ setProperty("CustomMessage", QVariant(value)); }

inline QString IWRS970X::CustomSoftKeys() const
{
    QVariant qax_result = property("CustomSoftKeys");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IWRS970X::SetCustomSoftKeys(const QString& value){ setProperty("CustomSoftKeys", QVariant(value)); }

inline bool IWRS970X::DebugEnabled() const
{
    QVariant qax_result = property("DebugEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetDebugEnabled(bool value){ setProperty("DebugEnabled", QVariant(value)); }

inline bool IWRS970X::DockSite() const
{
    QVariant qax_result = property("DockSite");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetDockSite(bool value){ setProperty("DockSite", QVariant(value)); }

inline bool IWRS970X::DoubleBuffered() const
{
    QVariant qax_result = property("DoubleBuffered");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetDoubleBuffered(bool value){ setProperty("DoubleBuffered", QVariant(value)); }

inline bool IWRS970X::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline bool IWRS970X::ErrorsEnabled() const
{
    QVariant qax_result = property("ErrorsEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetErrorsEnabled(bool value){ setProperty("ErrorsEnabled", QVariant(value)); }

inline bool IWRS970X::ExceptionsEnabled() const
{
    QVariant qax_result = property("ExceptionsEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetExceptionsEnabled(bool value){ setProperty("ExceptionsEnabled", QVariant(value)); }

inline int IWRS970X::ExplicitHeight() const
{
    QVariant qax_result = property("ExplicitHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IWRS970X::ExplicitLeft() const
{
    QVariant qax_result = property("ExplicitLeft");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IWRS970X::ExplicitTop() const
{
    QVariant qax_result = property("ExplicitTop");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IWRS970X::ExplicitWidth() const
{
    QVariant qax_result = property("ExplicitWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IWRS970X::ForceMenu() const
{
    QVariant qax_result = property("ForceMenu");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetForceMenu(bool value){ setProperty("ForceMenu", QVariant(value)); }

inline bool IWRS970X::HideAntennaIcon() const
{
    QVariant qax_result = property("HideAntennaIcon");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetHideAntennaIcon(bool value){ setProperty("HideAntennaIcon", QVariant(value)); }

inline bool IWRS970X::HideBatteryIcon() const
{
    QVariant qax_result = property("HideBatteryIcon");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetHideBatteryIcon(bool value){ setProperty("HideBatteryIcon", QVariant(value)); }

inline bool IWRS970X::KeyLockFeedback() const
{
    QVariant qax_result = property("KeyLockFeedback");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetKeyLockFeedback(bool value){ setProperty("KeyLockFeedback", QVariant(value)); }

inline bool IWRS970X::KeypadAlertEnabled() const
{
    QVariant qax_result = property("KeypadAlertEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetKeypadAlertEnabled(bool value){ setProperty("KeypadAlertEnabled", QVariant(value)); }

inline bool IWRS970X::KeypadBacklight() const
{
    QVariant qax_result = property("KeypadBacklight");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetKeypadBacklight(bool value){ setProperty("KeypadBacklight", QVariant(value)); }

inline WRS970::TOnTimer IWRS970X::KeypadBacklightOnTimer() const
{
    QVariant qax_result = property("KeypadBacklightOnTimer");
    Q_ASSERT(qax_result.isValid());
    return *(WRS970::TOnTimer*)qax_result.constData();
}
inline void IWRS970X::SetKeypadBacklightOnTimer(WRS970::TOnTimer value){ setProperty("KeypadBacklightOnTimer", QVariant(value)); }

inline WRS970::TOpMode IWRS970X::KeypadBacklightOpMethod() const
{
    QVariant qax_result = property("KeypadBacklightOpMethod");
    Q_ASSERT(qax_result.isValid());
    return *(WRS970::TOpMode*)qax_result.constData();
}
inline void IWRS970X::SetKeypadBacklightOpMethod(WRS970::TOpMode value){ setProperty("KeypadBacklightOpMethod", QVariant(value)); }

inline bool IWRS970X::KeypadHideVote() const
{
    QVariant qax_result = property("KeypadHideVote");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetKeypadHideVote(bool value){ setProperty("KeypadHideVote", QVariant(value)); }

inline QString IWRS970X::KeypadList() const
{
    QVariant qax_result = property("KeypadList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int IWRS970X::KeypadListCount() const
{
    QVariant qax_result = property("KeypadListCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IWRS970X::KeypadLoginEnabled() const
{
    QVariant qax_result = property("KeypadLoginEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetKeypadLoginEnabled(bool value){ setProperty("KeypadLoginEnabled", QVariant(value)); }

inline bool IWRS970X::KeypadLowBatteryNotification() const
{
    QVariant qax_result = property("KeypadLowBatteryNotification");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetKeypadLowBatteryNotification(bool value){ setProperty("KeypadLowBatteryNotification", QVariant(value)); }

inline WRS970::TPowerTimer IWRS970X::KeypadPowerTimer() const
{
    QVariant qax_result = property("KeypadPowerTimer");
    Q_ASSERT(qax_result.isValid());
    return *(WRS970::TPowerTimer*)qax_result.constData();
}
inline void IWRS970X::SetKeypadPowerTimer(WRS970::TPowerTimer value){ setProperty("KeypadPowerTimer", QVariant(value)); }

inline bool IWRS970X::KeypadsOutOfRange() const
{
    QVariant qax_result = property("KeypadsOutOfRange");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetKeypadsOutOfRange(bool value){ setProperty("KeypadsOutOfRange", QVariant(value)); }

inline bool IWRS970X::KeypadsPowerDown() const
{
    QVariant qax_result = property("KeypadsPowerDown");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetKeypadsPowerDown(bool value){ setProperty("KeypadsPowerDown", QVariant(value)); }

inline int IWRS970X::MaxKeypadsAllowed() const
{
    QVariant qax_result = property("MaxKeypadsAllowed");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IWRS970X::SetMaxKeypadsAllowed(int value){ setProperty("MaxKeypadsAllowed", QVariant(value)); }

inline WRS970::TMenuAccess IWRS970X::MenuAccess() const
{
    QVariant qax_result = property("MenuAccess");
    Q_ASSERT(qax_result.isValid());
    return *(WRS970::TMenuAccess*)qax_result.constData();
}
inline void IWRS970X::SetMenuAccess(WRS970::TMenuAccess value){ setProperty("MenuAccess", QVariant(value)); }

inline int IWRS970X::MessagePeriod() const
{
    QVariant qax_result = property("MessagePeriod");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IWRS970X::SetMessagePeriod(int value){ setProperty("MessagePeriod", QVariant(value)); }

inline QString IWRS970X::Model() const
{
    QVariant qax_result = property("Model");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IWRS970X::MouseInClient() const
{
    QVariant qax_result = property("MouseInClient");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IWRS970X::MsgAckEnabled() const
{
    QVariant qax_result = property("MsgAckEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetMsgAckEnabled(bool value){ setProperty("MsgAckEnabled", QVariant(value)); }

inline WRS970::TPingTimer IWRS970X::PingTimer() const
{
    QVariant qax_result = property("PingTimer");
    Q_ASSERT(qax_result.isValid());
    return *(WRS970::TPingTimer*)qax_result.constData();
}
inline void IWRS970X::SetPingTimer(WRS970::TPingTimer value){ setProperty("PingTimer", QVariant(value)); }

inline bool IWRS970X::PowerKeyDisabled() const
{
    QVariant qax_result = property("PowerKeyDisabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetPowerKeyDisabled(bool value){ setProperty("PowerKeyDisabled", QVariant(value)); }

inline WRS970::TBasePowerLevel IWRS970X::PowerLevel() const
{
    QVariant qax_result = property("PowerLevel");
    Q_ASSERT(qax_result.isValid());
    return *(WRS970::TBasePowerLevel*)qax_result.constData();
}
inline void IWRS970X::SetPowerLevel(WRS970::TBasePowerLevel value){ setProperty("PowerLevel", QVariant(value)); }

inline bool IWRS970X::ReceiveArrowOnAnyBase() const
{
    QVariant qax_result = property("ReceiveArrowOnAnyBase");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetReceiveArrowOnAnyBase(bool value){ setProperty("ReceiveArrowOnAnyBase", QVariant(value)); }

inline bool IWRS970X::SMSEntry() const
{
    QVariant qax_result = property("SMSEntry");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetSMSEntry(bool value){ setProperty("SMSEntry", QVariant(value)); }

inline int IWRS970X::SMSVoteTimeout() const
{
    QVariant qax_result = property("SMSVoteTimeout");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IWRS970X::SetSMSVoteTimeout(int value){ setProperty("SMSVoteTimeout", QVariant(value)); }

inline bool IWRS970X::ScrollFaster() const
{
    QVariant qax_result = property("ScrollFaster");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetScrollFaster(bool value){ setProperty("ScrollFaster", QVariant(value)); }

inline bool IWRS970X::SecureLogin() const
{
    QVariant qax_result = property("SecureLogin");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetSecureLogin(bool value){ setProperty("SecureLogin", QVariant(value)); }

inline int IWRS970X::SeqLinkPackets() const
{
    QVariant qax_result = property("SeqLinkPackets");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IWRS970X::SetSeqLinkPackets(int value){ setProperty("SeqLinkPackets", QVariant(value)); }

inline bool IWRS970X::ShowAnswer() const
{
    QVariant qax_result = property("ShowAnswer");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetShowAnswer(bool value){ setProperty("ShowAnswer", QVariant(value)); }

inline bool IWRS970X::ShowReceived() const
{
    QVariant qax_result = property("ShowReceived");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetShowReceived(bool value){ setProperty("ShowReceived", QVariant(value)); }

inline bool IWRS970X::ShowSending() const
{
    QVariant qax_result = property("ShowSending");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetShowSending(bool value){ setProperty("ShowSending", QVariant(value)); }

inline QString IWRS970X::TCPAddress() const
{
    QVariant qax_result = property("TCPAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IWRS970X::SetTCPAddress(const QString& value){ setProperty("TCPAddress", QVariant(value)); }

inline int IWRS970X::TCPPort() const
{
    QVariant qax_result = property("TCPPort");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IWRS970X::SetTCPPort(int value){ setProperty("TCPPort", QVariant(value)); }

inline bool IWRS970X::UseDockManager() const
{
    QVariant qax_result = property("UseDockManager");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetUseDockManager(bool value){ setProperty("UseDockManager", QVariant(value)); }

inline bool IWRS970X::Version3() const
{
    QVariant qax_result = property("Version3");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetVersion3(bool value){ setProperty("Version3", QVariant(value)); }

inline bool IWRS970X::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IWRS970X::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }

inline int IWRS970X::VisibleDockClientCount() const
{
    QVariant qax_result = property("VisibleDockClientCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IWRS970X::AddKeypad(const QString& SerialNumber)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&SerialNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline bool IWRS970X::AddKeypadByID(const QString& Keypads)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Keypads};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline bool IWRS970X::AddStaticKeypad(const QString& SerialNumber, int KeypadID, bool Overwrite)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&SerialNumber, (void*)&KeypadID, (void*)&Overwrite};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void IWRS970X::BeginQuestion(int QuestionNumber, WRS970::TAnswerType AnswerType)
{
    void *_a[] = {0, (void*)&QuestionNumber, (void*)&AnswerType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void IWRS970X::BeginQuestionAnswer(int QuestionNumber, WRS970::TAnswerType AnswerType, const QString& Answer)
{
    void *_a[] = {0, (void*)&QuestionNumber, (void*)&AnswerType, (void*)&Answer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void IWRS970X::BeginQuestionPrompt(WRS970::TLineOnePrompt LineOnePrompt, int QuestionNumber, WRS970::TAnswerType AnswerType, const QString& Answer)
{
    void *_a[] = {0, (void*)&LineOnePrompt, (void*)&QuestionNumber, (void*)&AnswerType, (void*)&Answer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void IWRS970X::ClearDataBuffer()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void IWRS970X::ClearKeypadList()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline void IWRS970X::Connect(const QString& SerialNumber)
{
    void *_a[] = {0, (void*)&SerialNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline void IWRS970X::Disconnect()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline int IWRS970X::DrawTextBiDiModeFlagsReadingOnly()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline QString IWRS970X::GetAvailableBases(bool WithDescription)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&WithDescription};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline void IWRS970X::GetBaseInfo()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline QVariant IWRS970X::GetTCPBases(bool WithDescription)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&WithDescription};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline void IWRS970X::InitiateAction()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline bool IWRS970X::IsKeypadInList(const QString& SerialNumber)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&SerialNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline bool IWRS970X::IsRightToLeft()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline void IWRS970X::KeypadLoginResult(const QString& SerialNumber, bool Passed)
{
    void *_a[] = {0, (void*)&SerialNumber, (void*)&Passed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void IWRS970X::LockKeys(const QString& Keys)
{
    void *_a[] = {0, (void*)&Keys};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void IWRS970X::LogoutAllKeypads()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void IWRS970X::LogoutKeypad(int Address)
{
    void *_a[] = {0, (void*)&Address};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void IWRS970X::Paint()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline void IWRS970X::RemoveKeypad(const QString& SerialNumber)
{
    void *_a[] = {0, (void*)&SerialNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}

inline bool IWRS970X::RemoveKeypadByID(const QString& Keypads)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Keypads};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline void IWRS970X::RemoveStaticKeypad(int KeypadID)
{
    void *_a[] = {0, (void*)&KeypadID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
}

inline void IWRS970X::SendMsgByID(int KeypadID, const QString& KeypadMessage)
{
    void *_a[] = {0, (void*)&KeypadID, (void*)&KeypadMessage};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
}

inline void IWRS970X::SendMsgBySerial(const QString& SerialNumber, const QString& Message)
{
    void *_a[] = {0, (void*)&SerialNumber, (void*)&Message};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
}

inline void IWRS970X::SetDesignVisible(bool Value)
{
    void *_a[] = {0, (void*)&Value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
}

inline void IWRS970X::SetSession(const QString& SessionName, int SessionGroup)
{
    void *_a[] = {0, (void*)&SessionName, (void*)&SessionGroup};
    qt_metacall(QMetaObject::InvokeMetaMethod, 82, _a);
}

inline void IWRS970X::SetSubComponent(bool IsSubComponent)
{
    void *_a[] = {0, (void*)&IsSubComponent};
    qt_metacall(QMetaObject::InvokeMetaMethod, 86, _a);
}

inline void IWRS970X::UnlockKeys(const QString& Keys)
{
    void *_a[] = {0, (void*)&Keys};
    qt_metacall(QMetaObject::InvokeMetaMethod, 92, _a);
}

inline bool IWRS970X::UseRightToLeftReading()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 93, _a);
    return qax_result;
}

inline bool IWRS970X::UseRightToLeftScrollBar()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 94, _a);
    return qax_result;
}


inline WRS970::TAddressMode WRS970X::AddressMode() const
{
    QVariant qax_result = property("AddressMode");
    Q_ASSERT(qax_result.isValid());
    return *(WRS970::TAddressMode*)qax_result.constData();
}
inline void WRS970X::SetAddressMode(WRS970::TAddressMode value){ setProperty("AddressMode", QVariant(value)); }

inline bool WRS970X::AlignDisabled() const
{
    QVariant qax_result = property("AlignDisabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool WRS970X::AlignWithMargins() const
{
    QVariant qax_result = property("AlignWithMargins");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetAlignWithMargins(bool value){ setProperty("AlignWithMargins", QVariant(value)); }

inline int WRS970X::AnswerPeriod() const
{
    QVariant qax_result = property("AnswerPeriod");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void WRS970X::SetAnswerPeriod(int value){ setProperty("AnswerPeriod", QVariant(value)); }

inline bool WRS970X::Authentication() const
{
    QVariant qax_result = property("Authentication");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetAuthentication(bool value){ setProperty("Authentication", QVariant(value)); }

inline bool WRS970X::AutoConnect() const
{
    QVariant qax_result = property("AutoConnect");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetAutoConnect(bool value){ setProperty("AutoConnect", QVariant(value)); }

inline bool WRS970X::AutomateQuestionNumber() const
{
    QVariant qax_result = property("AutomateQuestionNumber");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetAutomateQuestionNumber(bool value){ setProperty("AutomateQuestionNumber", QVariant(value)); }

inline WRS970::TBand WRS970X::AvoidWifi() const
{
    QVariant qax_result = property("AvoidWifi");
    Q_ASSERT(qax_result.isValid());
    return *(WRS970::TBand*)qax_result.constData();
}
inline void WRS970X::SetAvoidWifi(WRS970::TBand value){ setProperty("AvoidWifi", QVariant(value)); }

inline int WRS970X::BaseChannel() const
{
    QVariant qax_result = property("BaseChannel");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void WRS970X::SetBaseChannel(int value){ setProperty("BaseChannel", QVariant(value)); }

inline QString WRS970X::BaseName() const
{
    QVariant qax_result = property("BaseName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void WRS970X::SetBaseName(const QString& value){ setProperty("BaseName", QVariant(value)); }

inline QString WRS970X::BaseSerial() const
{
    QVariant qax_result = property("BaseSerial");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString WRS970X::BaseVersion() const
{
    QVariant qax_result = property("BaseVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool WRS970X::BeepKeypads() const
{
    QVariant qax_result = property("BeepKeypads");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetBeepKeypads(bool value){ setProperty("BeepKeypads", QVariant(value)); }

inline WRS970::TCommType WRS970X::CommType() const
{
    QVariant qax_result = property("CommType");
    Q_ASSERT(qax_result.isValid());
    return *(WRS970::TCommType*)qax_result.constData();
}
inline void WRS970X::SetCommType(WRS970::TCommType value){ setProperty("CommType", QVariant(value)); }

inline int WRS970X::CommunicationTimeout() const
{
    QVariant qax_result = property("CommunicationTimeout");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void WRS970X::SetCommunicationTimeout(int value){ setProperty("CommunicationTimeout", QVariant(value)); }

inline bool WRS970X::Connected() const
{
    QVariant qax_result = property("Connected");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString WRS970X::ControlVersion() const
{
    QVariant qax_result = property("ControlVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString WRS970X::CustomMessage() const
{
    QVariant qax_result = property("CustomMessage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void WRS970X::SetCustomMessage(const QString& value){ setProperty("CustomMessage", QVariant(value)); }

inline QString WRS970X::CustomSoftKeys() const
{
    QVariant qax_result = property("CustomSoftKeys");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void WRS970X::SetCustomSoftKeys(const QString& value){ setProperty("CustomSoftKeys", QVariant(value)); }

inline bool WRS970X::DebugEnabled() const
{
    QVariant qax_result = property("DebugEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetDebugEnabled(bool value){ setProperty("DebugEnabled", QVariant(value)); }

inline bool WRS970X::DockSite() const
{
    QVariant qax_result = property("DockSite");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetDockSite(bool value){ setProperty("DockSite", QVariant(value)); }

inline bool WRS970X::DoubleBuffered() const
{
    QVariant qax_result = property("DoubleBuffered");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetDoubleBuffered(bool value){ setProperty("DoubleBuffered", QVariant(value)); }

inline bool WRS970X::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline bool WRS970X::ErrorsEnabled() const
{
    QVariant qax_result = property("ErrorsEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetErrorsEnabled(bool value){ setProperty("ErrorsEnabled", QVariant(value)); }

inline bool WRS970X::ExceptionsEnabled() const
{
    QVariant qax_result = property("ExceptionsEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetExceptionsEnabled(bool value){ setProperty("ExceptionsEnabled", QVariant(value)); }

inline int WRS970X::ExplicitHeight() const
{
    QVariant qax_result = property("ExplicitHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int WRS970X::ExplicitLeft() const
{
    QVariant qax_result = property("ExplicitLeft");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int WRS970X::ExplicitTop() const
{
    QVariant qax_result = property("ExplicitTop");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int WRS970X::ExplicitWidth() const
{
    QVariant qax_result = property("ExplicitWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool WRS970X::ForceMenu() const
{
    QVariant qax_result = property("ForceMenu");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetForceMenu(bool value){ setProperty("ForceMenu", QVariant(value)); }

inline bool WRS970X::HideAntennaIcon() const
{
    QVariant qax_result = property("HideAntennaIcon");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetHideAntennaIcon(bool value){ setProperty("HideAntennaIcon", QVariant(value)); }

inline bool WRS970X::HideBatteryIcon() const
{
    QVariant qax_result = property("HideBatteryIcon");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetHideBatteryIcon(bool value){ setProperty("HideBatteryIcon", QVariant(value)); }

inline bool WRS970X::KeyLockFeedback() const
{
    QVariant qax_result = property("KeyLockFeedback");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetKeyLockFeedback(bool value){ setProperty("KeyLockFeedback", QVariant(value)); }

inline bool WRS970X::KeypadAlertEnabled() const
{
    QVariant qax_result = property("KeypadAlertEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetKeypadAlertEnabled(bool value){ setProperty("KeypadAlertEnabled", QVariant(value)); }

inline bool WRS970X::KeypadBacklight() const
{
    QVariant qax_result = property("KeypadBacklight");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetKeypadBacklight(bool value){ setProperty("KeypadBacklight", QVariant(value)); }

inline WRS970::TOnTimer WRS970X::KeypadBacklightOnTimer() const
{
    QVariant qax_result = property("KeypadBacklightOnTimer");
    Q_ASSERT(qax_result.isValid());
    return *(WRS970::TOnTimer*)qax_result.constData();
}
inline void WRS970X::SetKeypadBacklightOnTimer(WRS970::TOnTimer value){ setProperty("KeypadBacklightOnTimer", QVariant(value)); }

inline WRS970::TOpMode WRS970X::KeypadBacklightOpMethod() const
{
    QVariant qax_result = property("KeypadBacklightOpMethod");
    Q_ASSERT(qax_result.isValid());
    return *(WRS970::TOpMode*)qax_result.constData();
}
inline void WRS970X::SetKeypadBacklightOpMethod(WRS970::TOpMode value){ setProperty("KeypadBacklightOpMethod", QVariant(value)); }

inline bool WRS970X::KeypadHideVote() const
{
    QVariant qax_result = property("KeypadHideVote");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetKeypadHideVote(bool value){ setProperty("KeypadHideVote", QVariant(value)); }

inline QString WRS970X::KeypadList() const
{
    QVariant qax_result = property("KeypadList");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int WRS970X::KeypadListCount() const
{
    QVariant qax_result = property("KeypadListCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool WRS970X::KeypadLoginEnabled() const
{
    QVariant qax_result = property("KeypadLoginEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetKeypadLoginEnabled(bool value){ setProperty("KeypadLoginEnabled", QVariant(value)); }

inline bool WRS970X::KeypadLowBatteryNotification() const
{
    QVariant qax_result = property("KeypadLowBatteryNotification");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetKeypadLowBatteryNotification(bool value){ setProperty("KeypadLowBatteryNotification", QVariant(value)); }

inline WRS970::TPowerTimer WRS970X::KeypadPowerTimer() const
{
    QVariant qax_result = property("KeypadPowerTimer");
    Q_ASSERT(qax_result.isValid());
    return *(WRS970::TPowerTimer*)qax_result.constData();
}
inline void WRS970X::SetKeypadPowerTimer(WRS970::TPowerTimer value){ setProperty("KeypadPowerTimer", QVariant(value)); }

inline bool WRS970X::KeypadsOutOfRange() const
{
    QVariant qax_result = property("KeypadsOutOfRange");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetKeypadsOutOfRange(bool value){ setProperty("KeypadsOutOfRange", QVariant(value)); }

inline bool WRS970X::KeypadsPowerDown() const
{
    QVariant qax_result = property("KeypadsPowerDown");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetKeypadsPowerDown(bool value){ setProperty("KeypadsPowerDown", QVariant(value)); }

inline int WRS970X::MaxKeypadsAllowed() const
{
    QVariant qax_result = property("MaxKeypadsAllowed");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void WRS970X::SetMaxKeypadsAllowed(int value){ setProperty("MaxKeypadsAllowed", QVariant(value)); }

inline WRS970::TMenuAccess WRS970X::MenuAccess() const
{
    QVariant qax_result = property("MenuAccess");
    Q_ASSERT(qax_result.isValid());
    return *(WRS970::TMenuAccess*)qax_result.constData();
}
inline void WRS970X::SetMenuAccess(WRS970::TMenuAccess value){ setProperty("MenuAccess", QVariant(value)); }

inline int WRS970X::MessagePeriod() const
{
    QVariant qax_result = property("MessagePeriod");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void WRS970X::SetMessagePeriod(int value){ setProperty("MessagePeriod", QVariant(value)); }

inline QString WRS970X::Model() const
{
    QVariant qax_result = property("Model");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool WRS970X::MouseInClient() const
{
    QVariant qax_result = property("MouseInClient");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool WRS970X::MsgAckEnabled() const
{
    QVariant qax_result = property("MsgAckEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetMsgAckEnabled(bool value){ setProperty("MsgAckEnabled", QVariant(value)); }

inline WRS970::TPingTimer WRS970X::PingTimer() const
{
    QVariant qax_result = property("PingTimer");
    Q_ASSERT(qax_result.isValid());
    return *(WRS970::TPingTimer*)qax_result.constData();
}
inline void WRS970X::SetPingTimer(WRS970::TPingTimer value){ setProperty("PingTimer", QVariant(value)); }

inline bool WRS970X::PowerKeyDisabled() const
{
    QVariant qax_result = property("PowerKeyDisabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetPowerKeyDisabled(bool value){ setProperty("PowerKeyDisabled", QVariant(value)); }

inline WRS970::TBasePowerLevel WRS970X::PowerLevel() const
{
    QVariant qax_result = property("PowerLevel");
    Q_ASSERT(qax_result.isValid());
    return *(WRS970::TBasePowerLevel*)qax_result.constData();
}
inline void WRS970X::SetPowerLevel(WRS970::TBasePowerLevel value){ setProperty("PowerLevel", QVariant(value)); }

inline bool WRS970X::ReceiveArrowOnAnyBase() const
{
    QVariant qax_result = property("ReceiveArrowOnAnyBase");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetReceiveArrowOnAnyBase(bool value){ setProperty("ReceiveArrowOnAnyBase", QVariant(value)); }

inline bool WRS970X::SMSEntry() const
{
    QVariant qax_result = property("SMSEntry");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetSMSEntry(bool value){ setProperty("SMSEntry", QVariant(value)); }

inline int WRS970X::SMSVoteTimeout() const
{
    QVariant qax_result = property("SMSVoteTimeout");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void WRS970X::SetSMSVoteTimeout(int value){ setProperty("SMSVoteTimeout", QVariant(value)); }

inline bool WRS970X::ScrollFaster() const
{
    QVariant qax_result = property("ScrollFaster");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetScrollFaster(bool value){ setProperty("ScrollFaster", QVariant(value)); }

inline bool WRS970X::SecureLogin() const
{
    QVariant qax_result = property("SecureLogin");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetSecureLogin(bool value){ setProperty("SecureLogin", QVariant(value)); }

inline int WRS970X::SeqLinkPackets() const
{
    QVariant qax_result = property("SeqLinkPackets");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void WRS970X::SetSeqLinkPackets(int value){ setProperty("SeqLinkPackets", QVariant(value)); }

inline bool WRS970X::ShowAnswer() const
{
    QVariant qax_result = property("ShowAnswer");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetShowAnswer(bool value){ setProperty("ShowAnswer", QVariant(value)); }

inline bool WRS970X::ShowReceived() const
{
    QVariant qax_result = property("ShowReceived");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetShowReceived(bool value){ setProperty("ShowReceived", QVariant(value)); }

inline bool WRS970X::ShowSending() const
{
    QVariant qax_result = property("ShowSending");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetShowSending(bool value){ setProperty("ShowSending", QVariant(value)); }

inline QString WRS970X::TCPAddress() const
{
    QVariant qax_result = property("TCPAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void WRS970X::SetTCPAddress(const QString& value){ setProperty("TCPAddress", QVariant(value)); }

inline int WRS970X::TCPPort() const
{
    QVariant qax_result = property("TCPPort");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void WRS970X::SetTCPPort(int value){ setProperty("TCPPort", QVariant(value)); }

inline bool WRS970X::UseDockManager() const
{
    QVariant qax_result = property("UseDockManager");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetUseDockManager(bool value){ setProperty("UseDockManager", QVariant(value)); }

inline bool WRS970X::Version3() const
{
    QVariant qax_result = property("Version3");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetVersion3(bool value){ setProperty("Version3", QVariant(value)); }

inline bool WRS970X::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void WRS970X::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }

inline int WRS970X::VisibleDockClientCount() const
{
    QVariant qax_result = property("VisibleDockClientCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool WRS970X::AddKeypad(const QString& SerialNumber)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&SerialNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
    return qax_result;
}

inline bool WRS970X::AddKeypadByID(const QString& Keypads)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Keypads};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline bool WRS970X::AddStaticKeypad(const QString& SerialNumber, int KeypadID, bool Overwrite)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&SerialNumber, (void*)&KeypadID, (void*)&Overwrite};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline void WRS970X::BeginQuestion(int QuestionNumber, WRS970::TAnswerType AnswerType)
{
    void *_a[] = {0, (void*)&QuestionNumber, (void*)&AnswerType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
}

inline void WRS970X::BeginQuestionAnswer(int QuestionNumber, WRS970::TAnswerType AnswerType, const QString& Answer)
{
    void *_a[] = {0, (void*)&QuestionNumber, (void*)&AnswerType, (void*)&Answer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
}

inline void WRS970X::BeginQuestionPrompt(WRS970::TLineOnePrompt LineOnePrompt, int QuestionNumber, WRS970::TAnswerType AnswerType, const QString& Answer)
{
    void *_a[] = {0, (void*)&LineOnePrompt, (void*)&QuestionNumber, (void*)&AnswerType, (void*)&Answer};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
}

inline void WRS970X::ClearDataBuffer()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
}

inline void WRS970X::ClearKeypadList()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
}

inline void WRS970X::Connect(const QString& SerialNumber)
{
    void *_a[] = {0, (void*)&SerialNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
}

inline void WRS970X::Disconnect()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
}

inline int WRS970X::DrawTextBiDiModeFlagsReadingOnly()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 56, _a);
    return qax_result;
}

inline QString WRS970X::GetAvailableBases(bool WithDescription)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&WithDescription};
    qt_metacall(QMetaObject::InvokeMetaMethod, 57, _a);
    return qax_result;
}

inline void WRS970X::GetBaseInfo()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 58, _a);
}

inline QVariant WRS970X::GetTCPBases(bool WithDescription)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&WithDescription};
    qt_metacall(QMetaObject::InvokeMetaMethod, 59, _a);
    return qax_result;
}

inline void WRS970X::InitiateAction()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 60, _a);
}

inline bool WRS970X::IsKeypadInList(const QString& SerialNumber)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&SerialNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 61, _a);
    return qax_result;
}

inline bool WRS970X::IsRightToLeft()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 62, _a);
    return qax_result;
}

inline void WRS970X::KeypadLoginResult(const QString& SerialNumber, bool Passed)
{
    void *_a[] = {0, (void*)&SerialNumber, (void*)&Passed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 63, _a);
}

inline void WRS970X::LockKeys(const QString& Keys)
{
    void *_a[] = {0, (void*)&Keys};
    qt_metacall(QMetaObject::InvokeMetaMethod, 64, _a);
}

inline void WRS970X::LogoutAllKeypads()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 65, _a);
}

inline void WRS970X::LogoutKeypad(int Address)
{
    void *_a[] = {0, (void*)&Address};
    qt_metacall(QMetaObject::InvokeMetaMethod, 66, _a);
}

inline void WRS970X::Paint()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 67, _a);
}

inline void WRS970X::RemoveKeypad(const QString& SerialNumber)
{
    void *_a[] = {0, (void*)&SerialNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 68, _a);
}

inline bool WRS970X::RemoveKeypadByID(const QString& Keypads)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Keypads};
    qt_metacall(QMetaObject::InvokeMetaMethod, 69, _a);
    return qax_result;
}

inline void WRS970X::RemoveStaticKeypad(int KeypadID)
{
    void *_a[] = {0, (void*)&KeypadID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 70, _a);
}

inline void WRS970X::SendMsgByID(int KeypadID, const QString& KeypadMessage)
{
    void *_a[] = {0, (void*)&KeypadID, (void*)&KeypadMessage};
    qt_metacall(QMetaObject::InvokeMetaMethod, 71, _a);
}

inline void WRS970X::SendMsgBySerial(const QString& SerialNumber, const QString& Message)
{
    void *_a[] = {0, (void*)&SerialNumber, (void*)&Message};
    qt_metacall(QMetaObject::InvokeMetaMethod, 72, _a);
}

inline void WRS970X::SetDesignVisible(bool Value)
{
    void *_a[] = {0, (void*)&Value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 88, _a);
}

inline void WRS970X::SetSession(const QString& SessionName, int SessionGroup)
{
    void *_a[] = {0, (void*)&SessionName, (void*)&SessionGroup};
    qt_metacall(QMetaObject::InvokeMetaMethod, 121, _a);
}

inline void WRS970X::SetSubComponent(bool IsSubComponent)
{
    void *_a[] = {0, (void*)&IsSubComponent};
    qt_metacall(QMetaObject::InvokeMetaMethod, 125, _a);
}

inline void WRS970X::UnlockKeys(const QString& Keys)
{
    void *_a[] = {0, (void*)&Keys};
    qt_metacall(QMetaObject::InvokeMetaMethod, 131, _a);
}

inline bool WRS970X::UseRightToLeftReading()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 132, _a);
    return qax_result;
}

inline bool WRS970X::UseRightToLeftScrollBar()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 133, _a);
    return qax_result;
}



#endif

}

template<>
inline void *qMetaTypeConstructHelper(const WRS970::IWRS970X *t)
{ Q_ASSERT(!t); return new WRS970::IWRS970X; }

template<>
inline void *qMetaTypeConstructHelper(const WRS970::WRS970X *t)
{ Q_ASSERT(!t); return new WRS970::WRS970X; }

#endif

